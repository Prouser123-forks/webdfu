!function(){var e,t,n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={};e=r,t=function(){function e(e,t,n){var r=new XMLHttpRequest;r.open("GET",e),r.responseType="blob",r.onload=function(){a(r.response,t,n)},r.onerror=function(){console.error("could not download file")},r.send()}function t(e){var t=new XMLHttpRequest;t.open("HEAD",e,!1);try{t.send()}catch(e){}return 200<=t.status&&299>=t.status}function i(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(n){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var o="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof n&&n.global===n?n:void 0,s=o.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),a=o.saveAs||("object"!=typeof window||window!==o?function(){}:"download"in HTMLAnchorElement.prototype&&!s?function(n,r,s){var a=o.URL||o.webkitURL,c=document.createElement("a");r=r||n.name||"download",c.download=r,c.rel="noopener","string"==typeof n?(c.href=n,c.origin===location.origin?i(c):t(c.href)?e(n,r,s):i(c,c.target="_blank")):(c.href=a.createObjectURL(n),setTimeout((function(){a.revokeObjectURL(c.href)}),4e4),setTimeout((function(){i(c)}),0))}:"msSaveOrOpenBlob"in navigator?function(n,r,o){if(r=r||n.name||"download","string"!=typeof n)navigator.msSaveOrOpenBlob(function(e,t){return void 0===t?t={autoBom:!1}:"object"!=typeof t&&(console.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e}(n,o),r);else if(t(n))e(n,r,o);else{var s=document.createElement("a");s.href=n,s.target="_blank",setTimeout((function(){i(s)}))}}:function(t,n,r,i){if((i=i||open("","_blank"))&&(i.document.title=i.document.body.innerText="downloading..."),"string"==typeof t)return e(t,n,r);var a="application/octet-stream"===t.type,c=/constructor/i.test(o.HTMLElement)||o.safari,l=/CriOS\/[\d]+/.test(navigator.userAgent);if((l||a&&c||s)&&"undefined"!=typeof FileReader){var u=new FileReader;u.onloadend=function(){var e=u.result;e=l?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),i?i.location.href=e:location=e,i=null},u.readAsDataURL(t)}else{var d=o.URL||o.webkitURL,f=d.createObjectURL(t);i?i.location=f:location.href=f,i=null,setTimeout((function(){d.revokeObjectURL(f)}),4e4)}});o.saveAs=a.saveAs=a,r=a},void 0!==r?t():(t(),e.FileSaver={});var i,o,s={};function a(){throw new Error("setTimeout has not been defined")}function c(){throw new Error("clearTimeout has not been defined")}function l(e){if(i===setTimeout)return setTimeout(e,0);if((i===a||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:a}catch(e){i=a}try{o="function"==typeof clearTimeout?clearTimeout:c}catch(e){o=c}}();var u,d=[],f=!1,h=-1;function v(){f&&u&&(f=!1,u.length?d=u.concat(d):h=-1,d.length&&m())}function m(){if(!f){var e=l(v);f=!0;for(var t=d.length;t;){for(u=d,d=[];++h<t;)u&&u[h].run();h=-1,t=d.length}u=null,f=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===c||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{o(e)}catch(t){try{return o.call(null,e)}catch(t){return o.call(this,e)}}}(e)}}function w(e,t){this.fun=e,this.array=t}function g(){}let p;var y;s.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new w(e,t)),1!==d.length||f||l(m)},w.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.prependListener=g,s.prependOnceListener=g,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0},(y=p||(p={}))[y.GET_COMMANDS=0]="GET_COMMANDS",y[y.SET_ADDRESS=33]="SET_ADDRESS",y[y.ERASE_SECTOR=65]="ERASE_SECTOR";const S=1,b=2;class D extends Error{}function T(e){return{bLength:e.getUint8(0),bDescriptorType:e.getUint8(1),bmAttributes:e.getUint8(2),wDetachTimeOut:e.getUint16(3,!0),wTransferSize:e.getUint16(5,!0),bcdDFUVersion:e.getUint16(7,!0)}}function E(e){let t=function(e){let t,n=e,r=[],i=!1;for(;n.byteLength>2;){let e=n.getUint8(0),a=n.getUint8(1),c=new DataView(n.buffer.slice(0,e));if(4==a)t={bLength:(s=c).getUint8(0),bDescriptorType:s.getUint8(1),bInterfaceNumber:s.getUint8(2),bAlternateSetting:s.getUint8(3),bNumEndpoints:s.getUint8(4),bInterfaceClass:s.getUint8(5),bInterfaceSubClass:s.getUint8(6),bInterfaceProtocol:s.getUint8(7),iInterface:s.getUint8(8),descriptors:[]},i=254==t.bInterfaceClass&&1==t.bInterfaceSubClass,r.push(t);else if(i&&33==a){var o;let e=T(c);r.push(e),null===(o=t)||void 0===o||o.descriptors.push(e)}else{let n={bLength:e,bDescriptorType:a,descData:c};r.push(n),t&&t.descriptors.push(n)}n=new DataView(n.buffer.slice(e))}var s;return r}(new DataView(e.buffer.slice(9)));return{bLength:e.getUint8(0),bDescriptorType:e.getUint8(1),wTotalLength:e.getUint16(2,!0),bNumInterfaces:e.getUint8(4),bConfigurationValue:e.getUint8(5),iConfiguration:e.getUint8(6),bmAttributes:e.getUint8(7),bMaxPower:e.getUint8(8),descriptors:t}}class I{events={events:{},emit:function(e,...t){(this.events[e]||[]).forEach((e=>e(...t)))},on:function(e,t){return(this.events[e]=this.events[e]||[]).push(t),()=>this.events[e]=(this.events[e]||[]).filter((e=>e!==t))}}}class U{events={events:{},emit:function(e,...t){(this.events[e]||[]).forEach((e=>e(...t)))},on:function(e,t){return(this.events[e]=this.events[e]||[]).push(t),()=>this.events[e]=(this.events[e]||[]).filter((e=>e!==t))}}}class C{events={events:{},emit:function(e,...t){(this.events[e]||[]).forEach((e=>e(...t)))},on:function(e,t){return(this.events[e]=this.events[e]||[]).push(t),()=>this.events[e]=(this.events[e]||[]).filter((e=>e!==t))}}}const A=0,M=1,N=2,x=3,F=4,L=5,$=6,_=2,q=4,R=5,O=7,k=8,V=10,z=0;class P{events={events:{},emit:function(e,...t){(this.events[e]||[]).forEach((e=>e(...t)))},on:function(e,t){return(this.events[e]=this.events[e]||[]).push(t),()=>this.events[e]=(this.events[e]||[]).filter((e=>e!==t))}};interfaces=[];connected=!1;dfuseStartAddress=NaN;constructor(e,t={},n){this.device=e,this.settings=t,this.log=n}get type(){var e,t;return 282==(null===(e=this.properties)||void 0===e?void 0:e.DFUVersion)&&2==(null===(t=this.currentInterfaceSettings)||void 0===t?void 0:t.alternate.interfaceProtocol)?b:S}async init(){this.interfaces=await this.findDfuInterfaces(),this.events.emit("init")}async connect(e){this.device.opened||await this.device.open();let t=null;try{t=await this.getDFUDescriptorProperties()}catch(e){throw this.events.emit("disconnect",e),e}const n=this.interfaces[e];if(!n)throw new D("Interface not found");this.currentInterfaceSettings=n,this.currentInterfaceSettings.name&&(this.dfuseMemoryInfo=function(e){const t=e.indexOf("/");if(!e.startsWith("@")||-1==t)throw new D(`Not a DfuSe memory descriptor: "${e}"`);const n=e.substring(1,t).trim(),r=e.substring(t);let i=[];const o={" ":1,B:1,K:1024,M:1048576};let s,a=/\/\s*(0x[0-9a-fA-F]{1,8})\s*\/(\s*[0-9]+\s*\*\s*[0-9]+\s?[ BKM]\s*[abcdefg]\s*,?\s*)+/g;for(;s=a.exec(r);){var c;let e,t=/([0-9]+)\s*\*\s*([0-9]+)\s?([ BKM])\s*([abcdefg])\s*,?\s*/g,n=parseInt((null===(c=s)||void 0===c?void 0:c[1])??"",16);for(;e=t.exec(s[0]);){var l,u,d;let t=parseInt(e[1],10),r=parseInt(e[2])*(o[(null===(l=e)||void 0===l?void 0:l[3])??""]??0),s=(null===(u=(null===(d=e)||void 0===d?void 0:d[4])??"")||void 0===u?void 0:u.charCodeAt(0))-"a".charCodeAt(0)+1,a={start:n,sectorSize:r,end:n+r*t,readable:0!=(1&s),erasable:0!=(2&s),writable:0!=(4&s)};i.push(a),n+=r*t}}return{name:n,segments:i}}(this.currentInterfaceSettings.name)),t&&(this.properties=t);try{await this.open()}catch(e){throw this.events.emit("disconnect",e),e}this.events.emit("connect")}async close(){await this.device.close(),this.events.emit("disconnect")}read(e,t){if(!this)throw new D("Required initialized driver");const n=new I;try{let r;r=this.type===b?this.do_dfuse_read(n,e,t):this.do_read(n,e,t),r.then((e=>n.events.emit("end",e))).catch((e=>n.events.emit("error",e)))}catch(e){n.events.emit("error",e)}return n}write(e,t,n){if(!this)throw new D("Required initialized driver");let r=new U;return setTimeout((()=>{try{let i;i=this.type===b?this.do_dfuse_write(r,e,t):this.do_write(r,e,t,n),i.then((()=>r.events.emit("end"))).catch((e=>r.events.emit("error",e)))}catch(e){r.events.on("error",e)}}),0),r}async getDFUDescriptorProperties(){var e;let t=E(await this.readConfigurationDescriptor(0)),n=null,r=null===(e=this.device.configuration)||void 0===e?void 0:e.configurationValue;if(t.bConfigurationValue==r)for(let e of t.descriptors)if(33==e.bDescriptorType&&e.hasOwnProperty("bcdDFUVersion")){n=e;break}return n?{WillDetach:0!=(8&n.bmAttributes),ManifestationTolerant:0!=(4&n.bmAttributes),CanUpload:0!=(2&n.bmAttributes),CanDownload:0!=(1&n.bmAttributes),TransferSize:n.wTransferSize,DetachTimeOut:n.wDetachTimeOut,DFUVersion:n.bcdDFUVersion}:null}async findDfuInterfaces(){const e=[];for(let t of this.device.configurations)for(let n of t.interfaces)for(let r of n.alternates)254!=r.interfaceClass||1!=r.interfaceSubclass||1!=r.interfaceProtocol&&2!=r.interfaceProtocol||e.push({configuration:t,interface:n,alternate:r,name:r.interfaceName});return this.settings.forceInterfacesName&&await this.fixInterfaceNames(e),e}async fixInterfaceNames(e){if(e.some((e=>null==e.name))){await this.device.open(),await this.device.selectConfiguration(1);let i=await this.readInterfaceNames();for(let o of e)if(null===o.name){var t,n,r;let e=o.configuration.configurationValue,s=o.interface.interfaceNumber,a=o.alternate.alternateSetting;o.name=null==i||null===(t=i[e])||void 0===t||null===(n=t[s])||void 0===n||null===(r=n[a])||void 0===r?void 0:r.toString()}}}async readStringDescriptor(e,t=0){const n={requestType:"standard",recipient:"device",request:6,value:768|e,index:t};let r=await this.device.controlTransferIn(n,1);if(r.data&&"ok"==r.status){const e=r.data.getUint8(0);if(r=await this.device.controlTransferIn(n,e),r.data&&"ok"==r.status){const n=(e-2)/2;let i=[];for(let e=0;e<n;e++)i.push(r.data.getUint16(2+2*e,!0));return 0==t?i:String.fromCharCode.apply(String,i)}}throw new D(`Failed to read string descriptor ${e}: ${r.status}`)}async readDeviceDescriptor(){const e=await this.device.controlTransferIn({requestType:"standard",recipient:"device",request:6,value:256,index:0},18);if(!e.data||"ok"!==e.status)throw new D(`Failed to read device descriptor: ${e.status}`);return e.data}async readInterfaceNames(){let e={},t=new Set;for(let r=0;r<this.device.configurations.length;r++){let i=E(await this.readConfigurationDescriptor(r)),o=i.bConfigurationValue;e[o]={};for(let r of i.descriptors){var n;if(4===r.bDescriptorType)r=r,null!==(n=e[o])&&void 0!==n&&n[r.bInterfaceNumber]||(e[o][r.bInterfaceNumber]={}),e[o][r.bInterfaceNumber][r.bAlternateSetting]=r.iInterface,r.iInterface>0&&t.add(r.iInterface)}}let r={};for(let e of t)try{r[e]=await this.readStringDescriptor(e,1033)}catch(t){console.log(t),r[e]=null}for(let t of Object.values(e))for(let e of Object.values(t))for(let t in e)e[t]=r[e[t]];return e}async readConfigurationDescriptor(e){const t={requestType:"standard",recipient:"device",request:6,value:512|e,index:0},n=await this.device.controlTransferIn(t,4);if(!n.data||"ok"!==n.status)throw new D(`controlTransferIn error. [status]: ${n.status}`);let r=n.data.getUint16(2,!0);const i=await this.device.controlTransferIn(t,r);if(!i.data||"ok"!==i.status)throw new D(`controlTransferIn error. [status]: ${i.status}`);return i.data}async open(){var e;if(!this.currentInterfaceSettings)throw new D("Required selected interface");const t=this.currentInterfaceSettings.configuration.configurationValue;if(this.device.configuration&&this.device.configuration.configurationValue===t||await this.device.selectConfiguration(t),!this.device.configuration)throw new D(`Couldn't select the configuration '${t}'`);const n=this.currentInterfaceSettings.interface.interfaceNumber;null!==(e=this.device.configuration.interfaces[n])&&void 0!==e&&e.claimed||await this.device.claimInterface(n);const r=this.currentInterfaceSettings.alternate.alternateSetting;let i=this.device.configuration.interfaces[n];null!=i&&i.alternate&&i.alternate.alternateSetting==r||await this.device.selectAlternateInterface(n,r)}detach(){return this.requestOut(A,void 0,1e3)}abort(){return this.requestOut($)}async waitDisconnected(e){let t=this,n=this.device;return new Promise(((r,i)=>{let o;function s(i){i.device===n&&(e>0&&clearTimeout(o),t.connected=!1,navigator.usb.removeEventListener("disconnect",s),i.stopPropagation(),r(t))}e>0?o=window.setTimeout((()=>{navigator.usb.removeEventListener("disconnect",s),t.connected&&i("Disconnect timeout expired")}),e):navigator.usb.addEventListener("disconnect",s)}))}async isError(){try{const e=await this.getStatus();return!e||(null==e?void 0:e.state)==V}catch(e){return!0}}getState(){return this.requestIn(L,1).then((e=>Promise.resolve(e.getUint8(0))),(e=>Promise.reject("DFU GETSTATE failed: "+e)))}getStatus(){return this.requestIn(x,6).then((e=>Promise.resolve({status:e.getUint8(0),pollTimeout:16777215&e.getUint32(1,!0),state:e.getUint8(4)})),(e=>Promise.reject("DFU GETSTATUS failed: "+e)))}clearStatus(){return this.requestOut(F)}get intfNumber(){if(!this.currentInterfaceSettings)throw new D("Required selected interface");return this.currentInterfaceSettings.interface.interfaceNumber}async requestOut(e,t,n=0){try{const r=await this.device.controlTransferOut({requestType:"class",recipient:"interface",request:e,value:n,index:this.intfNumber},t);if("ok"!==r.status)throw new D(r.status);return r.bytesWritten}catch(e){throw new D("ControlTransferOut failed: "+e)}}async requestIn(e,t,n=0){try{const r=await this.device.controlTransferIn({requestType:"class",recipient:"interface",request:e,value:n,index:this.intfNumber},t);if("ok"!==r.status||!r.data)throw new D(r.status);return r.data}catch(e){throw new D("ControlTransferIn failed: "+e)}}download(e,t){return this.requestOut(M,e,t)}upload(e,t){return this.requestIn(N,e,t)}async abortToIdle(){await this.abort();let e=await this.getState();if(e==V&&(await this.clearStatus(),e=await this.getState()),e!=_)throw new D("Failed to return to idle state after abort: state "+e)}async poll_until(e){let t=await this.getStatus();function n(e){return new Promise((t=>{setTimeout(t,e)}))}for(;!e(t.state)&&t.state!=V;)await n(t.pollTimeout),t=await this.getStatus();return t}poll_until_idle(e){return this.poll_until((t=>t==e))}async do_read(e,t,n=1/0,r=0){let i,o,s=r,a=[],c=0;e.events.emit("process",0);do{o=Math.min(t,n-c),i=await this.upload(o,s++),i.byteLength>0&&(a.push(i),c+=i.byteLength),e.events.emit("process",c,Number.isFinite(n)?n:void 0)}while(c<n&&i.byteLength==o);return c==n&&await this.abortToIdle(),new Blob(a,{type:"application/octet-stream"})}async do_write(e,t,n,r=!0){let i=0,o=n.byteLength,s=0;for(e.events.emit("write/start"),e.events.emit("write/process",i,o);i<o;){const r=o-i,a=Math.min(r,t);let c,l=0;try{l=await this.download(n.slice(i,i+a),s++),c=await this.poll_until_idle(R)}catch(e){throw new D("Error during DFU download: "+e)}if(c.status!=z)throw new D(`DFU DOWNLOAD failed state=${c.state}, status=${c.status}`);i+=l,e.events.emit("write/process",i,o)}try{await this.download(new ArrayBuffer(0),s++)}catch(e){throw new D("Error during final DFU download: "+e)}if(e.events.emit("write/end",i),r){let e;try{if(e=await this.poll_until((e=>e==_||e==k)),e.status!=z)throw new D(`DFU MANIFEST failed state=${e.state}, status=${e.status}`)}catch(e){if(!e.endsWith("ControlTransferIn failed: NotFoundError: Device unavailable.")&&!e.endsWith("ControlTransferIn failed: NotFoundError: The device was disconnected."))throw new D("Error during DFU manifest: "+e);this.log.warning("Unable to poll final manifestation status")}}else try{await this.getStatus()}catch(e){}try{await this.device.reset()}catch(e){if("NetworkError: Unable to reset the device."!=e&&"NotFoundError: Device unavailable."!=e&&"NotFoundError: The device was disconnected."!=e)throw new D("Error during reset for manifestation: "+e)}}async do_dfuse_write(e,t,n){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new D("No memory map available");e.events.emit("erase/start");let r=0,i=n.byteLength,o=this.dfuseStartAddress;if(isNaN(o)){var s;if(o=null===(s=this.dfuseMemoryInfo.segments[0])||void 0===s?void 0:s.start,!o)throw new D("startAddress not found");this.log.warning("Using inferred start address 0x"+o.toString(16))}else if(null===this.getDfuseSegment(o)&&0!==n.byteLength)throw new D(`Start address 0x${o.toString(16)} outside of memory map bounds`);await new Promise(((t,n)=>{if(!o)return void n(new D("startAddress not found"));const r=this.erase(o,i);r.events.on("process",((...t)=>e.events.emit("erase/process",...t))),r.events.on("error",n),r.events.on("end",(()=>{e.events.emit("erase/end"),t()}))})),e.events.emit("write/start");let a=o;for(;r<i;){const o=i-r,s=Math.min(o,t);let c,l=0;try{await this.dfuseCommand(p.SET_ADDRESS,a,4),l=await this.download(n.slice(r,r+s),2),c=await this.poll_until_idle(R),a+=s}catch(e){throw new D("Error during DfuSe download: "+e)}if(c.status!=z)throw new D(`DFU DOWNLOAD failed state=${c.state}, status=${c.status}`);r+=l,e.events.emit("write/process",r,i)}e.events.emit("write/end",r);try{await this.dfuseCommand(p.SET_ADDRESS,o,4),await this.download(new ArrayBuffer(0),0)}catch(e){throw new D("Error during DfuSe manifestation: "+e)}await this.poll_until((e=>e==O))}async do_dfuse_read(e,t,n=1/0){if(!this.dfuseMemoryInfo)throw new D("Unknown a DfuSe memory info");let r=this.dfuseStartAddress;if(isNaN(r)){var i;if(r=null===(i=this.dfuseMemoryInfo.segments[0])||void 0===i?void 0:i.start,!r)throw new D("Unknown memory segments");this.log.warning("Using inferred start address 0x"+r.toString(16))}else null===this.getDfuseSegment(r)&&this.log.warning(`Start address 0x${r.toString(16)} outside of memory map bounds`);return await this.getState()!=_&&await this.abortToIdle(),await this.dfuseCommand(p.SET_ADDRESS,r,4),await this.abortToIdle(),await this.do_read(e,t,n,2)}getDfuseSegment(e){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new D("No memory map information available");for(let t of this.dfuseMemoryInfo.segments)if(t.start<=e&&e<t.end)return t;return null}getDfuseFirstWritableSegment(){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new D("No memory map information available");for(let e of this.dfuseMemoryInfo.segments)if(e.writable)return e;return null}getDfuseMaxReadSize(e){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new D("No memory map information available");let t=0;for(let n of this.dfuseMemoryInfo.segments)if(n.start<=e&&e<n.end){if(!n.readable)return 0;t+=n.end-e}else if(n.start==e+t){if(!n.readable)break;t+=n.end-n.start}return t}getDfuseSectorStart(e,t){if(void 0===t&&(t=this.getDfuseSegment(e)),!t)throw new D(`Address ${e.toString(16)} outside of memory map`);const n=Math.floor((e-t.start)/t.sectorSize);return t.start+n*t.sectorSize}getDfuseSectorEnd(e,t=this.getDfuseSegment(e)){if(!t)throw new D(`Address ${e.toString(16)} outside of memory map`);const n=Math.floor((e-t.start)/t.sectorSize);return t.start+(n+1)*t.sectorSize}erase(e,t){const n=new C,r=this;return async function(){let i=r.getDfuseSegment(e),o=r.getDfuseSectorStart(e,i);const s=r.getDfuseSectorEnd(e+t-1);if(!i)throw new D("Unknown segment");let a=0;const c=s-o;for(c>0&&n.events.emit("process",a,c);o<s;){var l,u;if(((null===(l=i)||void 0===l?void 0:l.end)??0)<=o&&(i=r.getDfuseSegment(o)),null!==(u=i)&&void 0!==u&&u.erasable){const e=Math.floor((o-i.start)/i.sectorSize),t=i.start+e*i.sectorSize;await r.dfuseCommand(p.ERASE_SECTOR,t,4),o=t+i.sectorSize,a+=i.sectorSize}else{var d,f;a=Math.min(a+((null===(d=i)||void 0===d?void 0:d.end)??0)-o,c),o=(null===(f=i)||void 0===f?void 0:f.end)??0}n.events.emit("process",a,c)}}().then((()=>n.events.emit("end"))).catch((e=>n.events.emit("error",e))),n}async dfuseCommand(e,t=0,n=1){const r={[p.GET_COMMANDS]:"GET_COMMANDS",[p.SET_ADDRESS]:"SET_ADDRESS",[p.ERASE_SECTOR]:"ERASE_SECTOR"};let i=new ArrayBuffer(n+1),o=new DataView(i);if(o.setUint8(0,e),1==n)o.setUint8(1,t);else{if(4!=n)throw new D("Don't know how to handle data of len "+n);o.setUint32(1,t,!0)}try{await this.download(i,0)}catch(t){throw new D("Error during special DfuSe command "+r[e]+":"+t)}if((await this.poll_until((e=>e!=q))).status!=z)throw new D("Special DfuSe command "+e+" failed")}}let B=null;function j(e){B=e}function W(e=B){e&&(e.innerHTML="")}function G(e){if(B){const t=document.createElement("p");t.className="info",t.textContent=e,B.appendChild(t)}}function H(e){if(B){const t=document.createElement("p");t.className="warning",t.textContent=e,B.appendChild(t)}}function K(e){if(console.error(e),B){const t=document.createElement("p");t.className="error",t.textContent=e,B.appendChild(t)}}function X(e,t){if(B){var n,r;let i=null;"progress"==(null===(n=B)||void 0===n||null===(r=n.lastElementChild)||void 0===r?void 0:r.tagName.toLowerCase())&&(i=B.lastElementChild),i||(i=document.createElement("progress"),B.appendChild(i)),i.value=e,void 0!==t&&(i.max=t)}}function J(e){let t=e.toString(16);for(;t.length<4;)t="0"+t;return t}function Q(e){let t=e.toString(16);for(;t.length<8;)t="0"+t;return"0x"+t}let Y=null;const Z=document.querySelector("#connect"),ee=document.querySelector("#download"),te=document.querySelector("#upload"),ne=document.querySelector("#status"),re=document.querySelector("#usbInfo"),ie=document.querySelector("#dfuInfo"),oe=document.querySelector("#configForm"),se=document.querySelector("#transferSize");let ae=parseInt(se.value);const ce=document.querySelector("#dfuseStartAddress"),le=document.querySelector("#dfuseUploadSize"),ue=document.querySelector("#firmwareFile");let de=null;const fe=document.querySelector("#downloadLog"),he=document.querySelector("#uploadLog");let ve=!0;function me(e){e&&(ne.textContent=e.message),Z.textContent="Connect",re.textContent="",ie.textContent="",te.disabled=!1,ee.disabled=!0,ue.disabled=!0}async function we(e){var t;if(!Y)throw new Error;await Y.connect(e);let n="";if(Y.properties){var r;const e=Y.properties,t=[`WillDetach=${Y.properties.WillDetach}`,`ManifestationTolerant=${Y.properties.ManifestationTolerant}`,`CanUpload=${Y.properties.CanUpload}`,`CanDownload=${Y.properties.CanDownload}`,`TransferSize=${Y.properties.TransferSize}`,`DetachTimeOut=${Y.properties.DetachTimeOut}`,`Version=${J(Y.properties.DFUVersion)}`];if(ie.textContent+="\n"+t.join(", "),se.value=Y.properties.TransferSize.toString(),ae=Y.properties.TransferSize,Y.properties.CanDownload&&(ve=Y.properties.ManifestationTolerant),2==(null===(r=Y.currentInterfaceSettings)||void 0===r?void 0:r.alternate.interfaceProtocol)&&(e.CanUpload||(te.disabled=!1,le.disabled=!0),e.CanDownload||(ee.disabled=!0)),Y.type===b&&Y.dfuseMemoryInfo){let e=0;for(const t of Y.dfuseMemoryInfo.segments)e+=t.end-t.start;n=`Selected memory region: ${Y.dfuseMemoryInfo.name} (${function(e){const t=1073741824,n=1048576;return e>=t?e/t+"GiB":e>=n?e/n+"MiB":e>=1024?e/1024+"KiB":e+"B"}(e)})`;for(const e of Y.dfuseMemoryInfo.segments){const t=[];e.readable&&t.push("readable"),e.erasable&&t.push("erasable"),e.writable&&t.push("writable");let r=t.join(", ");r||(r="inaccessible"),n+=`\n${Q(e.start)}-${Q(e.end-1)} (${r})`}}}if(W(he),W(fe),ne.textContent="",Z.textContent="Disconnect",re.textContent=`Name: ${Y.device.productName}\nMFG: ${Y.device.manufacturerName}\nSerial: ${Y.device.serialNumber}\n`,ie.textContent=Y?function(e){var t,n,r,i,o;const s=J(e.device.vendorId),a=J(e.device.productId),c=e.device.productName;let l="Unknown";return 1==(null===(t=e.currentInterfaceSettings)||void 0===t?void 0:t.alternate.interfaceProtocol)?l="Runtime":2==(null===(n=e.currentInterfaceSettings)||void 0===n?void 0:n.alternate.interfaceProtocol)&&(l="DFU"),`${l}: [${s}:${a}] cfg=${null===(r=e.currentInterfaceSettings)||void 0===r?void 0:r.configuration.configurationValue}, intf=${null===(i=e.currentInterfaceSettings)||void 0===i?void 0:i.interface.interfaceNumber}, alt=${null===(o=e.currentInterfaceSettings)||void 0===o?void 0:o.alternate.alternateSetting}, name="${c}" serial="${e.device.serialNumber}"`}(Y)+"\n"+n:"Not found",1==(null===(t=Y.currentInterfaceSettings)||void 0===t?void 0:t.alternate.interfaceProtocol)?(te.disabled=!1,ee.disabled=!0,ue.disabled=!0):(te.disabled=!1,ee.disabled=!1,ue.disabled=!1),Y.type===b&&Y.dfuseMemoryInfo){document.querySelector("#dfuseFields").hidden=!1,ce.disabled=!1,le.disabled=!1;const e=Y.getDfuseFirstWritableSegment();if(e){Y.dfuseStartAddress=e.start,ce.value="0x"+e.start.toString(16);const t=Y.getDfuseMaxReadSize(e.start);le.value=t.toString(),le.max=t.toString()}}else{document.querySelector("#dfuseFields").hidden=!0,ce.disabled=!0,le.disabled=!0}}se.addEventListener("change",(()=>{ae=parseInt(se.value)})),ce.addEventListener("change",(function(e){var t;const n=e.target,r=parseInt(n.value,16);isNaN(r)?n.setCustomValidity("Invalid hexadecimal start address"):Y&&Y.type===b&&null!==(t=Y)&&void 0!==t&&t.dfuseMemoryInfo?null!==Y.getDfuseSegment(r)?(Y.dfuseStartAddress=r,n.setCustomValidity(""),Y&&Y.type===b&&(le.max=Y.getDfuseMaxReadSize(r).toString())):n.setCustomValidity("Address outside of memory map"):n.setCustomValidity("")})),Z.addEventListener("click",(function(){if(Y)return Y.close().catch(console.error),void(Y=null);navigator.usb.requestDevice({filters:[]}).then((async e=>{Y=new P(e,{forceInterfacesName:!0},{info:G,warning:H,progress:X}),Y.events.on("disconnect",me),await Y.init(),0!=Y.interfaces.length?await we(0):ne.textContent="The selected device does not have any USB DFU interfaces."})).catch((e=>{console.log(e),ne.textContent=e}))})),te.addEventListener("click",(async function(e){if(e.preventDefault(),e.stopPropagation(),!oe.checkValidity())return oe.reportValidity(),!1;if(Y&&Y.device.opened){var t;j(he),W(he);try{await Y.isError()&&await Y.clearStatus()}catch(e){H("Failed to clear status")}let e=1/0;le.disabled||(e=parseInt(le.value));const n=Y.read(ae,e);(null===(t=Y)||void 0===t?void 0:t.type)===b&&G(`Reading up to 0x${e.toString(16)} bytes starting at 0x${Y.dfuseStartAddress.toString(16)}`),G("Copying data from DFU device to browser"),n.events.on("process",((e,t)=>{X(e,t)})),n.events.on("error",(e=>{K(e),j(null)})),n.events.on("end",(e=>{console.log("end?"),G(`Read ${e.size} bytes`),j(null),r.saveAs(e,"firmware.bin")}))}else me(),Y=null;return!1})),ue.addEventListener("change",(function(){if(de=null,((null==ue?void 0:ue.files)??[]).length>0){var e;const t=null===(e=ue.files)||void 0===e?void 0:e[0],n=new FileReader;n.onload=function(){n.result instanceof ArrayBuffer&&(de=n.result)},n.readAsArrayBuffer(t)}})),ee.addEventListener("click",(async function(e){e.preventDefault(),e.stopPropagation(),async function(){if(oe.checkValidity()){if(Y&&null!=de){j(fe),W(fe);try{await Y.isError()&&await Y.clearStatus()}catch(e){H("Failed to clear status")}const e=Y.write(ae,de,ve);e.events.on("erase/start",(()=>{console.log("erase/start!"),G("Erasing DFU device memory")})),e.events.on("erase/process",((e,t)=>{X(e,t)})),e.events.on("erase/end",(()=>{G("Success erased")})),e.events.on("write/start",(()=>{G("Copying data from browser to DFU device")})),e.events.on("write/process",((e,t)=>{X(e,t)})),e.events.on("write/end",(e=>{var t;G(`Wrote ${e} bytes`),G("Manifesting new firmware"),null===(t=Y)||void 0===t||t.getStatus().then((e=>{G(`Final DFU status: state=${e.state}, status=${e.status}`)})).catch((e=>{K(e)}))})),e.events.on("error",(e=>{K(e),j(null)})),e.events.on("end",(()=>{var e;G("Done!"),j(null),ve||null===(e=Y)||void 0===e||e.waitDisconnected(5e3).then((()=>{me(),Y=null})).catch((()=>{console.error("Device unexpectedly tolerated manifestation.")}))}))}}else oe.reportValidity()}().catch(console.error)})),void 0===navigator.usb?(ne.textContent="WebUSB not available.",Z.disabled=!0):navigator.usb.addEventListener("disconnect",(function(e){var t,n;null!==(t=Y)&&void 0!==t&&t.device&&(null===(n=Y)||void 0===n?void 0:n.device)===e.device&&(me(new Error("Device disconnected")),Y=null)}))}();
//# sourceMappingURL=index.728b2928.js.map
